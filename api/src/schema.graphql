
scalar JSON

type Question {
  questionId: ID!
  start: Boolean
  context: String
  space: String
  hint: String
  content: String
  raw_content: String
  source_ref: String
  solutions: [Solution]
    @cypher(statement: "MATCH (this)-[:ANSWER]->(sol:Solution) RETURN sol")
  solution_edges: [SolutionEdge]
  question_edges: [QuestionEdge]
}

type Solution {
  solutionId: ID!
  context: String
  space: String
  hint: String
  content: String
  raw_content: String
  source_ref: String
  parts: [String]
  attachment_types: [String]
  attachment_titles: [String]
  attachment_paths: [String]
}

type Edge @relation(name: "ANSWER"){
  answerId: ID!
  start: ID!
  end: ID!
  source_ref: String
  raw_content: String
  value: String
  synonyms: String
}

type QuestionEdge @relation(name: "ANSWER") {
  from: Question
  to: Question
  answerId: ID!
  start: ID
  end: ID
  source_ref: String
  raw_content: String
  value: String
  synonyms: String
}

type SolutionEdge @relation(name: "ANSWER") {
  from: Question
  to: Solution
  answerId: ID!
  start: ID
  end: ID
  source_ref: String
  raw_content: String
  value: String
  synonyms: String
}



#MATCH (q:Question {questionId: 0})
#OPTIONAL MATCH (es:Solution {solutionId: 20})
#OPTIONAL MATCH  (eq:Question {questionId: 20})
#MERGE (q)-[:ANSWER {source_ref: "8818987452753520504", raw_content: "Upright unit" ,value: "Upright unit",synonyms: ""}]->(es)
#MERGE (q)-[:ANSWER {source_ref: "8818987452753520504", raw_content: "Upright unit" ,value: "Upright unit",synonyms: ""}]->(eq)
#RETURN q,eq,es
type Mutation {
  mergeQuestionAnswer(
    answerId: ID!
    start: ID!
    end: ID!
    source_ref: String
    raw_content: String
    value: String
    synonyms: String
  ): Question
    @cypher(
      statement: "MATCH (q:Question {questionId: $start}) OPTIONAL MATCH (es:Solution {solutionId: $end}) OPTIONAL MATCH  (eq:Question {questionId: $end}) MERGE (q)-[:ANSWER {answerId:$answerId, source_ref: $source_ref, raw_content: $raw_content ,value: $value,synonyms: $synonyms,start:$start,end:$end}]->(es) MERGE (q)-[:ANSWER {answerId:$answerId, source_ref: $source_ref, raw_content: $raw_content ,value: $value,synonyms: $synonyms,start:$start,end:$end}]->(eq) RETURN q"
    )

    
}

type Query {
  questionCount: Int! @cypher(statement: "MATCH (q:Question) RETURN COUNT(q)")

  solutionCount: Int! @cypher(statement: "MATCH (s:Solution) RETURN COUNT(s)")

  edgeCount:Int! @cypher(statement:"MATCH ()-[r:ANSWER]->() RETURN COUNT(r) ")

  getAllInOne(count:Int): JSON

  getQuestionEdgesOfQuestion(questionId:ID!):[QuestionEdge]  

  getSolutionEdgesOfQuestion(questionId:ID!):[SolutionEdge] 

  getEdgesOfQuestion(questionId:ID!):[Edge]

  getEdgesOfSolution(solutionId:ID!):[Edge]

  getEdges(count:Int):[Edge]

  Edge(answerId:ID!):[Edge]

  executeRawQuery(query:String!):JSON
}
