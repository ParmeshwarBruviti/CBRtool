type Question {
  identity: ID!
  start: Boolean
  context: String
  space: String
  hint: String
  content: String
  raw_content: String
  source_ref: String
  questions: [Question] @relation(name: "ANSWER", direction: "OUT")
  solutions: [Solution] @relation(name: "ANSWER", direction: "OUT")
}

type Solution {
  identity: ID!
  context: String
  space: String
  hint: String
  content: String
  raw_content: String
  source_ref: String
  parts: [String]
  attachment_types: [String]
  attachment_titles: [String]
  attachment_paths: [String]
}

#MATCH (q:Question {identity: 0}) 
#OPTIONAL MATCH (es:Solution {identity: 20}) 
#OPTIONAL MATCH  (eq:Question {identity: 20}) 
#MERGE (q)-[:ANSWER {source_ref: "8818987452753520504", raw_content: "Upright unit" ,value: "Upright unit",synonyms: ""}]->(es)
#MERGE (q)-[:ANSWER {source_ref: "8818987452753520504", raw_content: "Upright unit" ,value: "Upright unit",synonyms: ""}]->(eq)
#RETURN q,eq,es
type Mutation {
  mergeQuestionAnswer(
    identity: ID!
    start: ID!
    end: ID!
    source_ref: String
    raw_content: String
    value: String
    synonyms: String
  ): Question
    @cypher(
      statement: "MATCH (q:Question {identity: $start}) MATCH (es:Solution {identity: $end}) MATCH  (eq:Question {identity: $end}) MERGE (q)-[:ANSWER {identity:$identity, source_ref: $source_ref, raw_content: $raw_content ,value: $value,synonyms: $synonyms}]->(es) MERGE (q)-[:ANSWER {identity:$identity, source_ref: $source_ref, raw_content: $raw_content ,value: $value,synonyms: $synonyms}]->(eq) RETURN q"
    )
}

type Query {
  questionCount: Int! @cypher(statement: "MATCH (q:Question) RETURN COUNT(q)")
  solutionCount: Int! @cypher(statement: "MATCH (s:Solution) RETURN COUNT(s)")
}
